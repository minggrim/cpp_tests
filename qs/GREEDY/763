class Solution {
public:
    vector<int> partitionLabels(string s) {
        unordered_map<char, int> l_idx;
        for (int i = s.size() - 1; i >= 0; i--) {
            if (l_idx[s[i]] == 0) l_idx[s[i]] = i + 1;
        }

        int w_start = 0;
        int w_end = l_idx[s[0]] - 1;
        vector<int> partitions;

        for (int i = 0; i < s.size(); i++) {
            if (i > w_end) {
                partitions.push_back(i - w_start);
                w_start = i;
                w_end = l_idx[s[i]] - 1;
            }
            else {
                if (l_idx[s[i]] - 1 > w_end) {
                    // extend w_end
                    w_end = l_idx[s[i]] - 1;
                }
            }
        }
        
        partitions.push_back(s.size() - w_start);
        return partitions;
    }
};
